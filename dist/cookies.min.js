(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["cookies"] = factory();
	else
		root["cookies"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports) {

	var cookies = function (data, opt) {
	  function defaults (obj, defs) {
	    obj = obj || {};
	    for (var key in defs) {
	      if (obj[key] === undefined) {
	        obj[key] = defs[key];
	      }
	    }
	    return obj;
	  }
	
	  defaults(cookies, {
	    expires: 365 * 24 * 3600,
	    path: '/',
	    secure: window.location.protocol === 'https:',
	
	    // Advanced
	    nulltoremove: true,
	    autojson: true,
	    autoencode: true,
	    encode: function (val) {
	      return encodeURIComponent(val);
	    },
	    decode: function (val) {
	      return decodeURIComponent(val);
	    }
	  });
	
	  opt = defaults(opt, cookies);
	
	  function expires (time) {
	    var expires = time;
	    if (!(expires instanceof Date)) {
	      expires = new Date();
	      expires.setTime(expires.getTime() + (time * 1000));
	    }
	    return expires.toUTCString();
	  }
	
	  if (typeof data === 'string') {
	    var value = document.cookie.split(/;\s*/)
	      .map(opt.autoencode ? opt.decode : function (d) { return d; })
	      .map(function (part) { return part.split('='); })
	      .reduce(function (parts, part) {
	        parts[part[0]] = part[1];
	        return parts;
	      }, {})[data];
	    if (!opt.autojson) return value;
	    try {
	      return JSON.parse(value);
	    } catch (e) {
	      return value;
	    }
	  }
	
	  // Set each of the cookies
	  for (var key in data) {
	    var expired = data[key] === undefined || (opt.nulltoremove && data[key] === null);
	    var str = opt.autojson ? JSON.stringify(data[key]) : data[key];
	    var encoded = opt.autoencode ? opt.encode(str) : str;
	    if (expired) encoded = '';
	    var res = opt.encode(key) + '=' + encoded +
	      (opt.expires ? (';expires=' + expires(expired ? -10000 : opt.expires)) : '') +
	      ';path=' + opt.path +
	      (opt.domain ? (';domain=' + opt.domain) : '') +
	      (opt.secure ? ';secure' : '');
	    if (opt.test) opt.test(res);
	    document.cookie = res;
	  }
	  return cookies;
	};
	
	module.exports = cookies;


/***/ }
/******/ ])
});
;
//# sourceMappingURL=cookies.min.js.map